# Reglas del Proyecto Infinia Sports

## Reglas Generales
- Los comentarios del código deben estar en español
- No realizar ningún cambio que no se solicite explícitamente
- Mantener homogeneidad en el código
- No incluir * en las importaciones
- Importar las clases necesarias
- Actualizar los planes y el memory-bank cada vez que avancemos en alguna tarea


## Convenciones de Código

### Backend (Java)
- Nombres de clases en inglés, siguiendo PascalCase
- Nombres de métodos en inglés, siguiendo camelCase
- Variables en inglés, siguiendo camelCase
- Comentarios en español
- Documentación JavaDoc en español
- Seguir arquitectura de 3 capas estrictamente (Controller, Service, Persistence)

### Frontend (React)
- Nombres de componentes en inglés, siguiendo PascalCase
- Nombres de funciones y variables en inglés, siguiendo camelCase
- Comentarios en español
- Estilos con enfoque "divertido pero corporativo"

## Patrones de Implementación
- Separación clara entre capas de la aplicación
- Validaciones siempre en la capa de servicio
- Manejo de errores consistente (códigos 400, 404)
- Documentación OpenAPI para todos los endpoints

## Preferencias de Desarrollo
- Enfoque en la claridad y mantenibilidad del código
- Priorizar la estructura correcta desde el inicio
- Implementar solo lo especificado, sin funcionalidades adicionales

## Estructura del Proyecto
- Seguir la estructura de carpetas definida en el plan
- Mantener separación clara entre backend y frontend
- Documentar en el Memory Bank cualquier cambio en la estructura

## Flujo de Trabajo
- Planificar antes de implementar
- Actualizar el Memory Bank después de cambios significativos
- Seguir los próximos pasos definidos en activeContext.md
- Mantener actualizado el archivo progress.md

## Aprendizajes y Evolución
Este archivo se actualizará con nuevos patrones y preferencias a medida que avance el desarrollo del proyecto.
